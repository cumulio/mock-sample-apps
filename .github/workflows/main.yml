# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: cumul

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.S3_PUSH_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.S3_PUSH_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.S3_PUSH_REGION }}

      # Runs a single command using the runners shell
      - name: Zip FE Files
        run: |
          rm -rf *.zip
          zip -r vue-mock-hello-world.zip mock-fe/vue-mock-hello-world/*
          zip -r react-mock-hello-world.zip mock-fe/react-mock-hello-world/*
          zip -r html-mock-hello-world.zip mock-fe/html-mock-hello-world/*
          zip -r angular-mock-hello-world.zip mock-fe/angular-mock-hello-world/*

      - name: Zip BE Files
        run: |
          zip -r dotnet-mock-hello-world.zip mock-be/dotnet-mock-hello-world/*
          zip -r python-mock-hello-world.zip mock-be/python-mock-hello-world/*
          zip -r java-mock-hello-world.zip mock-be/java-mock-hello-world/*
          zip -r nodejs-mock-hello-world.zip mock-be/nodejs-mock-hello-world/*
          zip -r php-mock-hello-world.zip mock-be/php-mock-hello-world/*

      # Runs a set of commands using the runners shell
      - name: Upload an invalidate
        run: |
          aws s3 cp vue-mock-hello-world.zip s3://static.cumul.io/sample-client/vue-mock-hello-world.zip
          aws s3 cp angular-mock-hello-world.zip s3://static.cumul.io/sample-client/angular-mock-hello-world.zip
          aws s3 cp html-mock-hello-world.zip s3://static.cumul.io/sample-client/html-mock-hello-world.zip          
          aws s3 cp react-mock-hello-world.zip s3://static.cumul.io/sample-client/react-mock-hello-world.zip
          aws s3 cp dotnet-mock-hello-world.zip s3://static.cumul.io/sample-server/dotnet-mock-hello-world.zip          
          aws s3 cp java-mock-hello-world.zip s3://static.cumul.io/sample-server/java-mock-hello-world.zip
          aws s3 cp python-mock-hello-world.zip s3://static.cumul.io/sample-server/python-mock-hello-world.zip
          aws s3 cp php-mock-hello-world.zip s3://static.cumul.io/sample-server/php-mock-hello-world.zip
          aws s3 cp nodejs-mock-hello-world.zip s3://static.cumul.io/sample-server/nodejs-mock-hello-world.zip
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/sample-client/*"
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/sample-server/*"
